//Nguyen Li
//June 24th, 2019
//Selection Structures pt3

/* first prompts the user for an earlier and later interval.
Each interval consists of two numbers  in 24-hour format
for example, 1507  for  3:07 p.m.
The program will then calculate how many minutes are in each interval,
which one is longer, and whether the intervals overlap
(does the later interval start before the first one is finished

If the intervals are of equal length, output should say they are equally long.
If the later interval starts at the same time that the earlier interval ends,
they do not overlap.

Convert the times to number of minutes after midnight.
This will make your calculations much easier.
0507 is 5 hours and 7 minutes past midnight, or 307 minutes past midnight.
You use / and % with 100 to split up the time into hr and mins part,
but use 60 when calculating total minutes! */


import java.util.Scanner; //imports Scanner tool

public class Intervals
{
	public static void main(String[] args)
	{

		Scanner input = new Scanner(System.in); //creates Scanner var

		//Variables
		final int SIXTY_MINS = 60;
		int temp, temp2;


		//Prompts user input
		System.out.print("Enter earlier start and "
							+ "end time as two 24-hour format times: ");
		int earlierStartTime = input.nextInt();
		int earlierEndTime = input.nextInt();

		System.out.print("Enter later start and"
							+ "end time as two 24-hour format times: ");
		int laterStartTime = input.nextInt();
		int laterEndTime = input.nextInt();


		//extra challenge
		//do-while to check if user enters times in wrong order
		do
		{
			temp = earlierStartTime;
			earlierStartTime = earlierEndTime;
			earlierEndTime = temp;
		}
		while (earlierStartTime > earlierEndTime);

		do
		{
			temp = laterStartTime;
			laterStartTime = laterEndTime;
			laterEndTime = temp;
		}
		while (laterStartTime > laterEndTime);


		//Converting hours to minutes, creates ref var for interval
		int earlierStartMinutes = (earlierStartTime/100 * SIXTY_MINS)
			+ (earlierStartTime%100);
		int earlierEndMinutes = (earlierEndTime/100 * SIXTY_MINS)
			+ (earlierEndTime%100);

		int laterStartMinutes = (laterStartTime/100 * SIXTY_MINS)
			+ (laterStartTime%100);
		int laterEndMinutes = (laterEndTime/100 * SIXTY_MINS)
			+ (laterEndTime%100);

		int earlierInterval = earlierEndMinutes - earlierStartMinutes;
		int laterInterval = laterEndMinutes - laterStartMinutes;


		//extra challenge
		//do-while if user enters interval in wrong order
		do
		{
			temp2 = earlierInterval;
			earlierInterval = laterInterval;
			laterInterval = temp2;
		}
		while (earlierInterval < laterInterval);



		//Displays output for intervals
		System.out.println("The earlier interval is " + earlierInterval
							+ " minutes long");
		System.out.println("The later interval is " + laterInterval
							+ " minutes long");


		//Compares/checks interval lengths/overlaps & displays output
		if (earlierInterval > laterInterval) //lengths check
		{
			System.out.println("The earlier interval is longer.");
		}
		else
			System.out.println("The later interval is longer.");

		if (earlierEndMinutes > laterStartMinutes) //Overlap check
		{
			System.out.println("These intervals overlap.");
		}
		else
			System.out.println("These interals do not overlap.");


	}
}
