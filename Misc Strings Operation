//
//Misc Strings Operation
//April 30

import java.util.Scanner;

public class MiscellanenousString {
   public static void main(String[] args) {
    String string1 = "the dog jumped over the fence";
    String string2 = "the";
    String string3 = "that";
    char[] charArray = { 'a', 'b', 'c', 'd', 'e', 'f', 'g',
                        'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',
                        'q', 'r', 's', 't', 'u', 'v','w', 'x','y', 'z'};

    // wordCount method
    int numberOfWords = MiscellaneousString.wordCount(string1);
    System.out.println("Count the number of words: " + string1);
    System.out.println("Number of words given string: " + numberOfWords);

    // arrayToString method
    String character = MiscellaneousString.arrayToString(charArray);
    System.out.print("\nGiven characters in the array:");

    for(int i = 0; i < charArray.length; i++)

    System.out.print(charArray[i] + " ");
    System.out.print("\nString from given character array: " + character);

    // mostFrequent method
    char mostOccurrence = MiscellaneousString.mostFrequent(string1);
    System.out.println("\nGiven string to get the most occured characters: " + string1);
    System.out.println("The most occured character in given string: " + mostOccurrence);

    //replaceSustring method
    String string = MiscellaneousString.replaceSubstring(string1, string2, string3);
    System.out.println("\nGiven string to modify: " + string1);
    System.out.println("Replace for: " +string2);
    System.out.println("After replacing, the new string: " + string);
  }
}

class MiscellaneousString{

    int numberOfWords;
    /* method should accept a reference to a string object
     * as an argument and return the number of words contain
     * in the object
     */

    	static int wordCount(String string1) {
        int number = 0;

        for(int i = 0; i < string1.length(); i++) {
            char ch = string1.charAt(i);

            if(Character.isWhitespace(ch)) {
                number = number + 1;
            }
        }

        return number + 1;
     }

     /* method should accept a char array as an argument and convert i to a string object.
      * The method should return to the string object.
      */
      static String arrayToString(char[] charArray) {
          return String.valueOf(charArray);
      }

      /* method accepts a reference to a string object as an argument
       * and returns the character that occurs the most frequently
       * in the object.
       */

       static char mostFrequent(String string1) {
           char mostOccurrence = ' ';
           int most = 0;
           int j;
           for(int i = 0; i < string1.length(); i++) {
               int count = 0;
               char ch = string1.charAt(i);

               for(j = 0; j < string1.length(); j++) {
                   if(ch == string1.charAt(j))count = count + 1;
               }

               if(count >= most) {
                   most = count;
                   mostOccurrence = ch;
                }
            }

            return mostOccurrence;
        }

    /* method accepts three references to string object as arguments.
     * Call them string1, string2, and string3; when it finds an occurrence
     * of string2, it replaces it with string 3.
     */

     static String replaceSubstring(String string1, String string2, String string3) {
     return string1.replaceAll(string2, string3);
    }
}


/** ASSIGNMENT

Write a class with the following static methods:

WordCount: This method should accept a reference to a String object as an argument and return the number of words contained in the object.
arrayToString: This method accepts a char array as an argument and converts it to a string object. 
The method should return a reference to the String object.
mostFrequent: This method accepts a reference to a String object as an argument and returns the character that occurs the most frequently in the object.
replaceSubstring: This method accepts three references to String objects as arguments. Let's call them string1, string2, and string3. 
It searches string1 for all occurrences of string2. When it finds an occurrence of string2, it replaces it with string3. 

For example, suppose the three arguments have the following values:
          string1:    "the dog jumped over the fence"

          string2:    "the"

          string3:    "that"

With these three arguments, the method would return a reference to a String object with the value "that dog jumped over that fence".

Demonstrate each of these methods in a computer program.

Sample Output:

Number of words in "the dog jumped over the fence" is 6
Most frequently occuring character: e
that dog jumped over that fence
How now brown cow
Press any key to continue . . . */
