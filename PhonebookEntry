//Nguyen Li
//phonebook entry
//April 23
/**
Problem:
Write a class named PhoneBookEntry that has fields for a person's name and phone number.  
The class should have a constructor and appropriate accessor and mutator methods.  
Then writs a program that crates at least five PhoneBookEntry objects and stores them in an ArrayList.  
Use a loop to display the contents of each object in the ArrayList. */

//
public class PhoneBookEntry
{
  //variables
	private String name;
	private String phoneNumber;
	
  //mutatators
	public PhoneBookEntry(String name, String phoneNumber)
	{
		this.name = name;
		this.phoneNumber = phoneNumber;
	}
	
	public PhoneBookEntry(PhoneBookEntry entry)
	{
		this.name = entry.getName();
		this.phoneNumber = entry.getPhoneNumber();
	}
	
	public PhoneBookEntry()
	{
	}

	public String getName()
	{
		return name;
	}

	public void setName(String name)
	{
		this.name = name;
	}

	public String getPhoneNumber()
	{
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber)
	{
		this.phoneNumber = phoneNumber;
	}
  
  //constructors
	@Override
	public String toString()
	{
		return "PhoneBookEntry [name=" + name + ", phoneNumber=" + phoneNumber
				+ "]";
	}
}

//Demo- in seperate .java file but this is github 

import java.util.ArrayList;

;

public class PhoneBookEntryDemo {
	public static void main(String[] args) {
		//ArrayList 
		ArrayList<PhoneBookEntry> phonebook = new ArrayList<PhoneBookEntry>();

		//The objects
		PhoneBookEntry bob = new PhoneBookEntry("Bob Jim", "123-4567");
		PhoneBookEntry john = new PhoneBookEntry("John Smith", "987-6543");
		PhoneBookEntry jim = new PhoneBookEntry("Jim Joe", "321-7654");
		PhoneBookEntry joe = new PhoneBookEntry("Joe Bob", "420-0666");
		PhoneBookEntry santa = new PhoneBookEntry("Santa Clause", "444-4444");

		//Adds objects
		phonebook.add(bob);
		phonebook.add(john);
		phonebook.add(jim);
		phonebook.add(joe);
		phonebook.add(santa);

		//Displays contents of objects
		for (int index = 0; index < phonebook.size(); index++) {
			System.out.println(phonebook.get(index).toString());
		}
	}
}
