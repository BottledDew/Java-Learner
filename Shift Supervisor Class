//Nguyen Li
//Shift Supervisor Class
//May 9th


public class Employee 
{
  // private variables
  private String name;
  private String number; // format: XXX-L where X is a number 0-9 and L is a letter from A-M
  private String hireDate;

  // public methods
  
  //constructor sets the name, number and hire date for an employee
  public Employee(String name, String number, String hireDate) 
  {
    this.name = new String(name);
    this.number = new String(number);
    this.hireDate = new String(hireDate);
  }

  //Name accessor (getter)
  public String getName() 
  {
    return name;
  }

  //Name mutator (setter)
  public void setName(String name) 
  {
    this.name = name;
  }

  //Number accessor (getter)
  public String getNumber() 
  {
    return number;
  }

  // Number mutator (setter)
  public void setNumber(String number) 
  {
    this.number = number;
  }

  //Hire Date accessor (getter)
  public String getHireDate() 
  {
    return hireDate;
  }

  //Hire Date mutator (setter)
  public void setHireDate(String hireDate) 
  {
    this.hireDate = hireDate;
  }

  //To String Method. Name, numb, hire date
  public String toString() 
  {
    String str = "Name: " + name +
                 "\nEmployee Number: " + number +
                 "\nEmployee Hire Date: " + hireDate;
    return str;
  }
}


//Extend Class
public class ShiftSupervisor extends Employee 
{

  // private fields
  private double annualSalary;
  private double annualBonus;

  // public methods

  //constructor sets the name, number and hire date for an Employee.
  public ShiftSupervisor(String name, String number, String hireDate, double salary, double bonus) 
  {
    super(name, number, hireDate);
    this.annualSalary = salary;
    this.productionBonus = bonus;
  }

  //Copy constructor.
  public ShiftSupervisor(ShiftSupervisor ss) 
  {
    super(ss.getName(), ss.getNumber(), ss.getHireDate());
    this.annualSalary  = ss.getAnnualSalary();
    this.productionBonus = ss.getProductionBonus();
  }

  //Annual Salary accessor (getter)
  public double getAnnualSalary() 
  {
    return annualSalary;
  }

  //Annual Salary mutator (setter)
  public void setAnnualSalary(double newSalary) 
  {
    this.annualSalary = newSalary;
  }

  //Production Bonus accessor (getter)
  public double getProductionBonus() 
  {
    return productionBonus;
  }

  //Production Bonus mutator (setter)
  public void setAnnualBonus(double newBonus) 
  {
    this.productionBonus = newBonus;
  }

  //To String Method. Salary, production bonus
  public String toString() 
  {
    String str = super.toString();
    str += "\n Annual Salary: " + annualSalary +
           "\n Production Bonus: " + productionBonus;
    return str;
  }

}


//Demo class
public class EmployeeDemo 
{
  public static void main(String[] args) 
  {
    // create a Shift Supervisor object
    ShiftSupervisor ss1 = new ShiftSupervisor("John Smith", "123-A", "11/15/2005", 12000, 3000);

    // create a copy of the first Shift Supervisor object
    ShiftSupervisor ss2 = new ShiftSupervisor(ss1);

    // print out the first Shift Supervisor object
    System.out.println("\nThis is the first Shift Supervisor object: ");
    System.out.println(ss1);

    // print out the second Shift Supervisor object
    System.out.println("\nThis is the second Shift Supervisor object: ");
    System.out.println(ss2);


  } // end main() method

} // end EmployeeDemo class




/**
ASSIGNMENT

Design a class named Employee. this class should keep the following information in fields:

Employee name
Employee number in the format XXX-L, where each X is a digit within the range 0-9 and the L is a letter within the range A-M.
Hire date
Write one or more constructors and appropriate accessor and mutator methods for the class.

A shift supervisor is a salaried employee who supervises a shift. 
In addition to salary, the shift supervisor earns a yearly bonus when his or her shift meets the production goals. 
Design a ShiftSupervisor class that extends the Employee class you created above. 
The ShiftSupervisor class should have a field that holds the annual salary and a field that holds the annual production bonus 
-that the shift supervisor has earned. 
Write one or more constructors and the appropriate accessor (getters) and mutator (setters) methods for the class.

Demonstrate the class by writing a program that uses a ShiftSupervisor object. 
Make sure to process two supervisors. 
One is built with the full argument constructor and the second with the no-argument constructor. 
*/
